"use client";

import { startAuthentication } from "@simplewebauthn/browser";
import {
  getAuthenticationOptions,
  verifyAuthentication,
} from "../lib/authentication";
import { WebAuthnCredential } from "@simplewebauthn/server";

interface AuthenticatePasskeyProps {
  userCredential: WebAuthnCredential | null;
}

export default function AuthenticatePasskey({
  userCredential,
}: AuthenticatePasskeyProps) {
  async function handleClick() {
    if (!userCredential) {
      console.error(
        "No user credential found. Please register a passkey first."
      );
      return;
    }

    console.debug("Authenticating with Passkey...");

    console.debug("Generating authentication options...");
    const authenticationOptions = await getAuthenticationOptions();
    console.debug(
      "Authentication options generated by server:",
      JSON.stringify(authenticationOptions, null, 2)
    );

    console.debug("Starting authentication (passkey interaction)...");
    const authenticationResponse = await startAuthentication({
      optionsJSON: authenticationOptions,
    });
    console.debug(
      "Authentication response from passkey:",
      JSON.stringify(authenticationResponse, null, 2)
    );

    console.debug("Verifying authentication...");
    const verificationResponse = await verifyAuthentication(
      authenticationResponse,
      authenticationOptions.challenge,
      userCredential
    );
    console.debug(
      "Verification response from server:",
      JSON.stringify(verificationResponse, null, 2)
    );
  }

  return (
    <button
      className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]"
      onClick={handleClick}
    >
      Authenticate w/ Passkey
    </button>
  );
}
